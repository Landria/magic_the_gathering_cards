#!/usr/bin/env ruby
require './lib/magic_the_gathering_cards'
require 'pry'
require 'optparse'

options = {}

OptionParser.new do |parser|
  parser.on('-g', '--group GROUPS', Array, 'Cards grouping attrs') do |groups|
    options[:group_by] = groups
  end

  parser.on('-c', '--color FILTERS', Array, 'Cards color filters') do |filters|
    options[:colors] = filters
  end

  parser.on('-s', '--setName FILTERS', String, 'Cards setName filters') do |filters|
    options[:setName] = filters
  end

  parser.on('-t', '--type FILTERS', String, 'Cards type filters') do |filters|
    options[:type] = filters
  end

  parser.on('-p', '--pages FILTERS', Integer, 'Cards pages count filters') do |filters|
    options[:pages] = filters
  end

  parser.on('-l', '--legalities FILTERS', String, 'Cards legalities filters') do |filters|
    options[:legalities] = filters
  end

  parser.on('-f', '--fields FILTERS', Array, 'Cards fields filters') do |filters|
    options[:fields] = filters
  end
end.parse!

params = Hash[*options[:fields]].merge(
  colors: options[:colors],
  setName: options[:setName],
  type: options[:type],
  legalities: options[:legalities]
)

params = params.map do |o, v|
  "#{o}: #{v.inspect}" if v
end.compact

group_by = options[:group_by].map { |o| ":#{o}" }.join(', ') if options[:group_by]
puts eval("MagicTheGatheringCards::Cards.fetch(#{options[:pages]}).soft_reduce(#{params.join(', ')}).group_by(#{group_by})")

binding.pry
